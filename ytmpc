#!/bin/bash


CONFIG="${XDG_CONFIG_HOME:-"$HOME/.config"}/ytmp"
if [[ -f "$CONFIG/ytmp.conf" ]]; then
    CONFPATH="$CONFIG/ytmp.conf"
else
    CONFPATH="/etc/ytmp.conf"
fi
. "$CONFPATH"


isSet() {
    [[ -z ${!1} ]] && echo "$1 is not set in $CONFPATH" && exit 1
}

OPTS=(GUI PLAYER DWN YTQUAL)
for i in "${OPTS[@]}"; do
    validateConfig "$i"
done

ytplay() {
  echo "[ytmpc] Now playing: ($host) $title"
  $PLAYER "$vidurl" > /dev/null 2>&1
}

ytdownload() {
  echo "[ytmpc] Now downloading: ($host) $title"
  case $host in
    "youtube") youtube-dl $YTQUAL -o "${DWN:-$HOME}/%(stitle)s.%(ext)s" "http://www.youtube.com/watch?v=""$id";;
    "vimeo") wget -O "${DWN:-$HOME}/$title.flv" "$vidurl";;
  esac
}

ytdlandplay() {
  case $host in
    "youtube") local log="/tmp/youtube-dl.log"
               ytdownload | tee "$log" &
               vidurl="$(grep -F Destination "$log" | awk '{print $3}')";;
    "vimeo") ytdownload &
             vidurl="${DWN:-$HOME}/$title.flv" 
  esac
  sleep 3
  while ! [ -f "$vidurl" ] ; do sleep 3; done
  ytplay &
}

_zenity() {
  title="${title//&/&amp;}" # zenity requires ampersand characters to be escaped
  choice="$(zenity --list --checklist --text="$title" --hide-header --column "1" \
              --column "2" TRUE "View in mplayer" FALSE "Download")"

  case "$choice" in
    "View in mplayer") ytplay &;;
    "Download") ytdownload &;;
    "View in mplayer|Download") ytdlandplay &;;
  esac
}

_kdialog() {
  choice=$(kdialog --checklist "$title" 1 "View with mplayer (default)" on \
              2 "Download" off)

  case "$choice" in
    '"1" ') echo "yup"
             ytplay &;;
    '"2" ') ytdownload &;;
    '"1" "2" ') ytdlandplay &;;
  esac
}

_dmenu() {
  choice=$(echo -e "View in mplayer\nDownload" | dmenu -i)

  case "$choice" in
    "View in mplayer") ytplay &;;
    "Download") ytdownload &;;
    "View in mplayer|Download") ytdlandplay &;;
  esac
}

parsevimeo() {
# based on video-dl by Vitaly Minko
# http://ossguy.com/?p=172
  local video_xml=$(wget -q -O - "http://www.vimeo.com/moogaloop/load/clip:$id") 
  local signature=$(echo $video_xml | \
    sed -e 's/^.*<request_signature>\([^<]*\)<.*$/\1/g')
  local signature_expires=$(echo $video_xml | \
    sed -e 's/^.*<request_signature_expires>\([^<]*\)<.*$/\1/g')
  title=$(echo $video_xml | \
    sed -e 's/^.*locked> <video> <caption>\([^<]*\)<.*$/\1/')
  vidurl="http://www.vimeo.com/moogaloop/play/clip:$id/$signature/$signature_expires/?q=sd"
}

lastid=""
while(true); do
  if [[ -f /tmp/ytmpurls ]]; then  
    tail -n 2 /tmp/ytmpurls > /tmp/ytmpvars
    source /tmp/ytmpvars
    if [[ "$id" != "$lastid" ]]; then
      case "$host" in
        "youtube") title="$(youtube-dl -e "http://www.youtube.com/watch?v=""$id")"
                   vidurl="$(youtube-dl $YTQUAL -g "http://www.youtube.com/watch?v=""$id")";;
        "vimeo") parsevimeo;; 
      esac
      case "$GUI" in
        "none") ytplay &;;
        "zenity") _zenity;;
        "kdialog") _kdialog;;
        "dmenu") _dmenu;;
      esac
    fi
    lastid="$id"
  fi
  sleep 1
done

